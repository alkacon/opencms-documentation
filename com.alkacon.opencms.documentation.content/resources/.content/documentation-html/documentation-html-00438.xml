<?xml version="1.0" encoding="UTF-8"?>

<DocumentationHtmls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/com.alkacon.opencms.documentation/schemas/documentation-html.xsd">
  <DocumentationHtml language="en">
    <Html name="Html0">
      <links>
        <link name="link0" internal="false" type="A">
          <target><![CDATA[http://files.opencms.org/javadoc/core/org/opencms/jsp/util/CmsJspContentAccessBean.html]]></target>
        </link>
      </links>
      <content><![CDATA[<p>Here are the interesting spots of the formatter:</p>
<ul>
<li>As in each JSP, the taglibs used have to be included, here done via <code>&lt;%page ... taglibs="c,cms" %&gt;</code>.</li>
<li>The code that produces HTML is framed by <code>&lt;cms:formatter var="content" ...&gt;&lt;div ...&gt; ... &lt;/div&gt;&lt;/cms:formatter&gt;</code>. This is typical for all formatters. The <code>&lt;cms:formatter&gt;</code> exposes the content that should be rendered via an <a href="%(link0)">CmsJspContentAccessBean</a>. In the example, the variables <code>value</code> and <code>rdfa</code>, exposed via the attributes <code>val</code> and <code>rdfa</code> are only abbreviations for <code>content.value</code> and <code>content.rdfa</code>. <br /><em>Note: It is important to have a &lt;div&gt; directly nested as the only child of the formatter tag. Otherwise, the content may not render as expected (in particular in the page editor).</em></li>
<li>The formatter tests if elements are present in the currently rendered content, e.g., via <code>value.Image.isSet</code> in the example, and inserts content values in the HTML, e.g., via <code>value.Title</code> in the example.</li>
<li>The formatter is sensitive to element settings. In the example, the image is only rendered if the setting <code>showImage</code> is <code>true</code>, which is checked via <code>cms.element.settings["showImage"] eq "true"</code>.</li>
<li>The formatter enables inline editing - here only for the Headline by adding <code>${rdfa.Title}</code> to the <code>&lt;h3&gt;</code> tag.</li>
</ul>]]></content>
    </Html>
  </DocumentationHtml>
</DocumentationHtmls>
