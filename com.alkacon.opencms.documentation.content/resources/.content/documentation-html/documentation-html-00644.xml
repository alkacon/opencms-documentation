<?xml version="1.0" encoding="UTF-8"?>

<DocumentationHtmls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/com.alkacon.opencms.documentation/schemas/documentation-html.xsd">
  <DocumentationHtml language="en">
    <Html name="Html0">
      <links/>
      <content><![CDATA[<p>Besides the special XML structure of the schema definition that is required for schemas that are used for content types, the naming of elements and types also has to comply with a certain scheme. It is best exemplified in the above example, where the schema type "SimpleType" is defined. In the description below, "SimpleType" can be replaced by any possible name you want give to your schema type. But the <strong>prefix and suffix parts are mandatory, as well as using the same schema type name in all the aforementioned places</strong> in the schema.</p>
<p>The values of name and type attributes have to comply with the special name scheme at:</p>
<ul>
<li>Line 8: <code>&lt;xsd:element name="SimpleExample<strong>s</strong>" type="<strong>OpenCms</strong>SimpleExample<strong>s</strong>"/&gt;</code><br />Here the <code>name</code> attribute has to be <code>{schema type}s</code> and the <code>type</code> attribute <code>OpenCms{schema type}s</code>.</li>
<li>Line 10: <code class="">&lt;xsd:complexType name="<strong>OpenCms</strong>SimpleExample<strong>s</strong>"&gt;</code><br />Here the name has to be the type attribute from line 8, because you define that type in the <code>&lt;xsd:complexType&gt;</code> node.</li>
<li>Line 12: <code class="">&lt;xsd:element name="SimpleExample" type="<strong>OpenCms</strong>SimpleExample" minOccurs="0" maxOccurs="unbounded" /&gt;</code><br />Here the <code>name</code> attribute has to be <code>{schema type name}</code> and the <code>type</code> attribute <code>OpenCms{schema type name}</code>. Also <code>minOccurs</code> and <code>maxOccurs</code> must always be given as in the example. Reading the schema from line 10 to 14, you can identify the "multi-language" wrapper: the lines say that we have zero or more (language specific) versions of a content item stored.</li>
<li>Line 17: <code class="">&lt;xsd:complexType name="<strong>OpenCms</strong>SimpleExample"&gt;<br /></code>Use <code>OpenCms{schema type name}</code> for the <code>name</code> attribute here. In the node starting at line 17 you begin with the definition of the content item's structure for one language, i.e., with the definition of the type used for the elements defined in line 12.</li>
</ul>]]></content>
    </Html>
  </DocumentationHtml>
</DocumentationHtmls>
