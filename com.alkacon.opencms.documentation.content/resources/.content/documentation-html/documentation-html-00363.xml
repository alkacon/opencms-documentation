<?xml version="1.0" encoding="UTF-8"?>

<DocumentationHtmls xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/com.alkacon.opencms.documentation/schemas/documentation-html.xsd">
  <DocumentationHtml language="en">
    <Html name="Html0">
      <links/>
      <content><![CDATA[<p>The design of content types strongly depends on your website. You may, for example, set up a web shop and therefore design a content type that holds all the information for a single item you sell. You may like to set up a kind of blog and capture each blog entry in a single content item, saving the title of the entry, the text written, the author, the creation date and maybe even more information. Potentially also optional information.</p>
<p>Since the suitability of a content type really depends on the web site you want to build, you will not find "your" type definitions shipped with OpenCms. But OpenCms offers a suitable place for them: You can place the stuff that is specific to your web site(s) in separate modules. Modules can be exported and imported in OpenCms and add new functionality - for example new content types. Typically content type definitions are placed in the VFS folder <code>/system/modules/{the module's name}/schemas</code>. Look up the content definitions in the demo modules for example.</p>
<p>Even more individual than the content types are the formatters for the types. They will necessarily depend on the layout of your web site. While type definitions may be useful for various different websites, e.g., for different web shops, the formatters typically fit only for a single page. Like the type definitions, the formatters are placed in modules. It is a matter of taste whether you place formatters and type definitions in the same module or not. What is good practice is to place them in a module sub-folder named 'formatters', i.e., in /system/modules/{the module's name}/formatters, and to accompany them with a configuration.</p>]]></content>
    </Html>
  </DocumentationHtml>
</DocumentationHtmls>
