<?xml version="1.0" encoding="UTF-8"?>

<FlexibleData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.template/schemas/flexible-up.xsd">
  <Flexible language="en">
    <Title><![CDATA[Example CMIS client program 2]]></Title>
    <Code><![CDATA[/**
* Demo for uploading files to CMIS.
*/
public class CmisUploader {

    /** The repository id. */
    public static final String REPOSITORY_ID = "cmis-offline";

    /** The session factory. */
    private static SessionFactory sessionFactory = SessfromionFactoryImpl.newInstance();

    private String m_repositoryUrl;

    /** The session. */
    private Session m_session = null;

    public CmisUploader(String repositoryUrl) {

        m_repositoryUrl = repositoryUrl;
    }

    /**
     * Main method.
     */
    public static void main(String[] args) throws Exception {

        String repositoryUrl = args[0];
        String source = args[1];
        String target = args[2];
        CmisUploader uploader = new CmisUploader(repositoryUrl);
        uploader.copyFiles(source, target);
    }

    /**
     * Copies files from a local folder to a CMIS folder.
     */
    public void copyFiles(String sourceFolder, String targetFolder) throws Exception {

        File sourcefolder = new File(sourceFolder);
        for (File child : sourcefolder.listFiles()) {
            if (child.isFile()) {
                uploadFileToCmis(child.getAbsolutePath(), targetFolder);
            }
        }
    }

    /**
     * Uploads a single file from the local file system to a CMIS folder.
     */
    public void uploadFileToCmis(String fileSystemPath, String targetFolder) throws Exception {

        Session session = getSession();
        File file = new File(fileSystemPath);
        String name = file.getName();
        byte[] fileContent = readFile(file);
        Folder parent = (Folder)(session.getObjectByPath(targetFolder));
        String targetPath = (targetFolder + "/" + name).replaceAll("/+", "/");
        try {
            session.getObjectByPath(targetPath);
            System.out.println("Not creating " + targetPath + " since it already exists. ");
        } catch (CmisObjectNotFoundException e) {
            System.out.println("Creating " + targetPath);
            Map<String, Object> properties = new HashMap<String, Object>();
            properties.put(PropertyIds.OBJECT_TYPE_ID, "cmis:document");
            properties.put(PropertyIds.NAME, name);
            ContentStream contentStream = new ContentStreamImpl(
                name,
                BigInteger.valueOf(fileContent.length),
                "binary/octet-stream",
                new ByteArrayInputStream(fileContent));
            parent.createDocument(properties, contentStream, VersioningState.MAJOR);
        }
    }

    /**
     * Gets the session, creating it if possible.
     */
    private Session getSession() {

        if (m_session == null) {
            Map<String, String> parameters = new HashMap<String, String>();
            // OpenCms user name and password
            parameters.put(SessionParameter.USER, "Admin");
            parameters.put(SessionParameter.PASSWORD, "admin");
            parameters.put(SessionParameter.ATOMPUB_URL, m_repositoryUrl);
            parameters.put(SessionParameter.BINDING_TYPE, BindingType.ATOMPUB.value());
            parameters.put(SessionParameter.REPOSITORY_ID, "cmis-offline");
            m_session = sessionFactory.createSession(parameters);
        }
        return m_session;
    }

    /**
     * Utility method for reading a file's content.
     */
    private byte[] readFile(File file) throws IOException {

        byte[] fileContent = new byte[(int)file.length()];
        FileInputStream istream = new FileInputStream(file);
        istream.read(fileContent);
        istream.close();
        return fileContent;
    }
}]]></Code>
  </Flexible>
</FlexibleData>
