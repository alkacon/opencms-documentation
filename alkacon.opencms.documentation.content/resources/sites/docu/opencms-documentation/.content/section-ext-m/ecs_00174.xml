<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Caching]]></Title>
    <Section>
      <Text name="Text0">
        <links>
          <link name="link0" internal="true" type="A">
            <target><![CDATA[/sites/docu/opencms-documentation/template-development/caching-in-opencms/the-flex-cache/]]></target>
            <uuid>9717a5e0-d124-11ec-9238-0242ac11002b</uuid>
          </link>
          <link name="link1" internal="true" type="A">
            <target><![CDATA[/sites/docu/opencms-documentation/the-opencms-workplace/properties-dialog/]]></target>
            <uuid>6a49a907-d1c4-11ec-9238-0242ac11002b</uuid>
          </link>
          <link name="link2" internal="true" type="A">
            <target><![CDATA[/sites/docu/opencms-documentation/the-opencms-workplace/cache-app/]]></target>
            <uuid>eb9ac077-d1c6-11ec-9238-0242ac11002b</uuid>
          </link>
        </links>
        <content><![CDATA[<p>JSP caching is probably one of the most powerful internal features OpenCms offers but is also one of the most difficult to understand. Why is caching important? Think of a normal HTML page consisting of a header, a body, and a footer. The output of an HTML page is often not longer than several hundred lines of HTML code. Be aware, though, that in a content management system, an HTML page is dynamically composed on request by many different data:</p>
<ul style="list-style-type: square;">
<li><strong>Step 1</strong>: when calling some <code>index.html</code> page, a <strong>container page</strong> is loaded that stores which text-image and layout contents appear on a page <strong>in which order,</strong>&nbsp;<strong>in which nesting, and with which formatting;</strong> the appearance of a (nested, formatted) content on a page is called a <strong>container element</strong></li>
<li><strong>Step 2</strong>: the content, the formatter configuration including (default) element settings are loaded for each <strong>container element</strong></li>
<li><strong>Step 3</strong>: finally the formatter JSP is evaluated against the referenced content, the formatter, and the element settings in the locale the user did request</li>
</ul>
<p>It is obvious that this request chain needs time. Let it be only 20 container elements on a page, this can already mean several hundred database queries, parsing steps, and transformations per user request. <strong>To guarantee good performance, caching is a must</strong>.</p>
<p>As a template developer, you should not rely on the existence of an external website cache, but use the OpenCms internal <a href="%(link0)">Flex cache</a>. The flex cache is an in-memory key value store that saves the finally generated HTML markup of a formatter JSP as the value. The key encodes all the context information (locale specific content values, formatter, element settings, and so on) that led to a particular HTML output.</p>
<p>The flex cache offers a defined set of cache directives to react on context information. For formatter JSPs, these are the most relevant directives:</p>
<ul>
<li><code><strong>container-element</strong></code>: a cache entry is created for each combination of content, formatter, and element settings</li>
<li><code><strong>locale</strong></code>: a cache entry in addition is created per user locale</li>
<li><code><strong>uri</strong></code>: a cache entry in addition is created per requested URI</li>
</ul>
<p>Cache directives are set for each formatter JSP individually with the <a href="%(link1)">Properties dialog</a>. There is a property named <code>cache</code> that expects a list of flex cache directives separated by semicolon. A typical flex cache setting for a formatter JSP looks like this:&nbsp;</p>
<p><code>container-element</code>;<code>uri</code>;<code>locale</code></p>
<p>There is a <a href="%(link2)">Cache app</a> available with which one can understand the creation of flex cache entries. Note that the flex cache is active for published contents only. As long as you are logged into the workplace, the flex cache is not active and you cannot check your cache settings.</p>
<p>There are numerous situations where the <code>container-element;uri;locale</code> setting is not enough for a formatter JSP. Let's say, your formatter JSP creates some HTML output depending on a request parameter like this:</p>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
