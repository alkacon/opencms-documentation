<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Available commands]]></Title>
    <Section>
      <Text name="Text0">
        <links>
          <link name="link0" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/util/CmsDataTypeUtil.html]]></target>
            <anchor><![CDATA[isParseable(java.lang.Class)]]></anchor>
          </link>
          <link name="link1" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/main/I_CmsShellCommands.html]]></target>
          </link>
          <link name="link2" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/file/CmsRequestContext.html]]></target>
          </link>
          <link name="link3" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/file/CmsObject.html]]></target>
          </link>
          <link name="link4" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/main/I_CmsShellCommands.html]]></target>
          </link>
        </links>
        <content><![CDATA[<p>The available commands are public methods from various classes. But not all public methods make up a command. The methods must have sufficiently simple arguments. That means, all arguments must have a "simple" type.</p>
<p>The types that are supported for command arguments are the arguments parsable via <code><a href="%(link0)">org.opencms.util.CmsDataTypeUtil.isParseable</a></code>.</p>
<p>By default commands are exposed for methods of the following classes:</p>
<ul>
<li><code><a href="%(link1)">org.opencms.main.I_CmsShellCommands</a></code></li>
<li><code><a href="%(link2)">org.opencms.file.CmsRequestContext</a></code></li>
<li><code><a href="%(link3)">org.opencms.file.CmsObject</a></code></li>
</ul>
<p>You can look up descriptions of the methods available as commands in the JavaDoc.</p>
<p>Using the argument <code>-additional</code> when calling the OpenCms shell, you can add an extra class for exposing methods. The class must implement <code><a href="%(link4)">I_CmsShellCommands</a></code>.</p>
<p>Typing <code>help *</code> in the shell, you can always get an overview of the available commands.</p>
<p>When you connect to the shell via<strong> RMI</strong>, there are three interesting commands available that do not make sence in stand-alone mode:</p>
<ul>
<li><code><strong>sendBroadcast message</strong></code>: Sends the message to all logged in users via the OpenCms broadcast mechanism.</li>
<li><code><strong>setLoginMessage message loginDisabled</strong></code>: Sets a login message and disables/enables login. E.g., you could call <code>setLoginMessage "Login disabled for maintenance" "true"</code></li>
<li><strong><code>clearLoginMessage</code></strong>: Disables a formerly set login message.</li>
</ul>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
