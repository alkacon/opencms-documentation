<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Responsive layouts continued]]></Title>
    <Section>
      <Text name="Text0">
        <links/>
        <content><![CDATA[<p>The example JSP uses a CSS framework where the <code>is-full</code> class name results in a full-width column. The <code>is-one-quarter</code> class name makes the left column occupying 3 of 12 grid cells whilst the right column automatically occupies the remaining 9 cells, without a class name given.</p>
<p>The <code>&lt;cms:container&gt;</code> tag is a nested container. It is the area where content editors can drop new contents. Make sure that the <code>name</code> of the container is unique for one hierarchy level of the nested container structure. <code>leftcol</code> and <code>rightcol</code> are the names for the <code>3-9</code> layout variant example. When realizing a <code>3-3-3</code> variant, for example, <code>col1</code>, <code>col2</code>, <code>col3</code> would be suitable container names.</p>
<p>With the type attribute—<code>type="element"</code> in the example, which is a freely choosen name—you can help the content editor with <strong>content nesting</strong>. It is the aim to allow any content type, <em>card</em> or <em>alert</em> for example, to be inserted into a layout column. But probably it is not intended that a layout column can be inserted into another layout column again. With the <code>type</code> attribute of <code>&lt;cms:container&gt;</code> you can control the nesting of elements.</p>
<p>Use the formatter configurations to configure content nesting. Say we have the following formatters:</p>
<p><code>formatters/section-card.xml</code> (element)<br /><code>formatters/section-alert.xml</code> (element)<code><br />formatters/layout.xml</code> (layout)<br /><code>formatters/layout.jsp</code> (element)</p>
<p>The <code>layout.jsp</code> would contain <code>&lt;cms:container type="element"&gt;</code> definitions, and <code>section-card.xml</code> and <code>section-alert.xml</code> would define the <code>element</code> container type too. <code>layout.xml</code> defines the <code>layout</code> container type and thus cannot be inserted into another layout.&nbsp;</p>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
