<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Display variations]]></Title>
    <Section>
      <Text name="Text0">
        <links>
          <link name="link0" internal="true" type="A">
            <target><![CDATA[/sites/docu/opencms-documentation/background/the-module-system/]]></target>
            <uuid>8d7dcf6b-d1b9-11ec-9238-0242ac11002b</uuid>
          </link>
        </links>
        <content><![CDATA[<p>A very useful thing is that there can be more than one formatter for a content type. If you have a look at one of the many modern CSS frameworks out there, you will find certain UI components recurring that are typical of today's web design: <strong>cards</strong>, <strong>panels</strong>, <strong>alerts</strong>, <strong>media lists</strong>, and so on. Those UI components are entirely different in their display. If one has a closer look at them, though, one will notice that they often consist of a combination of always the same data fields: a short <strong>title</strong>, a longer <strong>text</strong> that may have inline formattings, an <strong>image</strong> (maybe the thumbnail of a video), and a <strong>link</strong>. Some of the UI components may omit the image or the link and consist of a title and a text only. But in abstract terms, the combination of these four data fields is a common ground for many web UI components.</p>
<p>It is good practice for a content management system to keep content types as abstractly as possible and leave the display to the formatters. What does this mean? Instead of defining a card content type, a panel content type, an alert content type, and a media list content type, it is better to create one <strong>section</strong> content type—defining a title, text, image, and link field—and then to equip this content type with different formatters: a cards formatter, a panels formatter, an alerts formatter, and a media list formatter.</p>
<p>Formatters are stored in <a href="%(link0)">modules</a>, by convention in a folder named <code>formatters/</code>. Formatters consist of two files, a so called <strong>formatter configuration</strong>—a built-in configuration type in the XML format—and a <strong>formatter JSP</strong>. It is a common approach to name these two files in such a way that both, the content type, and the form of display are present in the file name. In our example, you would choose the file names as follows, for example:</p>
<p><code>formatters/section-card.xml</code><br /><code>formatters/section-card.jsp</code><br /><code>formatters/section-alert.xml</code><br /><code>formatters/section-alert.jsp</code></p>
<p>And so on. The following two example JSPs illustrate a card formatter and an alert formatter, both presenting the same section content in two display variants.&nbsp;</p>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
