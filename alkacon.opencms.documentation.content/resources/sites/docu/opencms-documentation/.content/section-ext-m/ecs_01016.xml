<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Attach additional content to a the detail view 2]]></Title>
    <Section>
      <Text name="Text0">
        <links>
          <link name="link0" internal="false" type="A">
            <target><![CDATA[https://documentation.opencms.org/javadoc/core/org/opencms/jsp/util/CmsJspContentAccessBean.html]]></target>
          </link>
        </links>
        <content><![CDATA[<p>Usually when placing a content element on a container page, the reference to this element is stored within the container page XML-content. With the elements in detail-only containers, this would not work, as there is only one detail page content for many content items.</p>
<p>When using the detail-only containers, OpenCms will automatically create and manage a new container page XML-content for each content item where additional related content is added in an detail-only container. Within this container page the element references will be stored. Since OpenCms 10, there will be one specific container page for each locale. In case the content is <code>/.content/news/news_0001.html</code> and locale is <code>en</code> this would be <code>/.content/news/.detailContainers/en/news_0001.xml</code>. So by convention the container page is placed in a subfolder of the content item's location called <code>.detailContainers</code> and it is named like the news itself. During the rendering process the same convention is used to look up detail container elements. So deleting a <code>.detailContainers</code>-folder will remove all related elements to the present news.</p>
<p>Since OpenCms 11 the JSP API on dealing with detail-only contents has been massively improved. In the formatter for a content you can get the&nbsp; attached detail-only contents by "<code>${content.attachments}</code>" and more methods related to detail-only contents are available. Have a look at the JavaDoc for the <a href="%(link0)">CmsJspContentAccessBean</a> to explore them.</p>
<div class="alert alert-info">The detail-only container can also be rendered by the detail formatter of the content itself.</div>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
