<?xml version="1.0" encoding="UTF-8"?>

<ExtendedSectionData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="opencms://system/modules/alkacon.mercury.extension.section_ext/schemas/section-ext.xsd">
  <ExtendedSection language="en">
    <Title><![CDATA[Basic formatter]]></Title>
    <Section>
      <Text name="Text0">
        <links/>
        <content><![CDATA[<p>A formatter is wrapped by the <code>&lt;cms:formatter&gt;</code> tag. Inside the formatter tag, there must be only one outer HTML tag. It does not matter if the HTML tag is a <code>&lt;div&gt;</code> or another HTML tag, but it must be only one to be rendered correctly. It is a best practice to give the outer HTML tag a common class name—<code>class="block"</code> in the example above—for <strong>all</strong> your formatters available in a template. The reason is that, on a webpage, there is usually not only one content rendered on a page but many content elements of different types, one below the other. With the common class name in the outer HTML tag, you can handle margins nicely. Normally there is a defined space <strong>between</strong> the content elements, but not at the end of the last element.</p>
<p>A fundamental task of a formatter is to deal with empty or not existing data fields. As the example content XSD shows, <code>Title</code> is a required element and may not be empty, whilst <code>Text</code> may be empty and <code>Image</code> may not exist at all. Empty data fields have sometimes the unpleasent characteristic to disturb the layout of the HTML markup, for example, by leaving unwanted empty spaces. When developing a formatter, it is thus especially important to test with contents that have empty or not existing fields.</p>
<p>With <code>&lt;cms:formatter value="value"&gt;</code>, there is a shorthand syntax to access the content values, changing the constantly repeating <code>content.value.*</code> notation into <code>value.*</code> only:</p>]]></content>
      </Text>
    </Section>
  </ExtendedSection>
</ExtendedSectionData>
